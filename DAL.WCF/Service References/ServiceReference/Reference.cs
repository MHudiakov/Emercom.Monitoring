//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.WCF.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentGroup", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class EquipmentGroup : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KEquipment", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class KEquipment : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EquipmentGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EquipmentGroupId {
            get {
                return this.EquipmentGroupIdField;
            }
            set {
                if ((this.EquipmentGroupIdField.Equals(value) != true)) {
                    this.EquipmentGroupIdField = value;
                    this.RaisePropertyChanged("EquipmentGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Equipment", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Equipment : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KEquipmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LastMovementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KEquipmentId {
            get {
                return this.KEquipmentIdField;
            }
            set {
                if ((this.KEquipmentIdField.Equals(value) != true)) {
                    this.KEquipmentIdField = value;
                    this.RaisePropertyChanged("KEquipmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LastMovementId {
            get {
                return this.LastMovementIdField;
            }
            set {
                if ((this.LastMovementIdField.Equals(value) != true)) {
                    this.LastMovementIdField = value;
                    this.RaisePropertyChanged("LastMovementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((this.UnitIdField.Equals(value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movement", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Movement : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EquipmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArrivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EquipmentId {
            get {
                return this.EquipmentIdField;
            }
            set {
                if ((this.EquipmentIdField.Equals(value) != true)) {
                    this.EquipmentIdField = value;
                    this.RaisePropertyChanged("EquipmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArrived {
            get {
                return this.IsArrivedField;
            }
            set {
                if ((this.IsArrivedField.Equals(value) != true)) {
                    this.IsArrivedField = value;
                    this.RaisePropertyChanged("IsArrived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((this.UnitIdField.Equals(value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Unit", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Unit : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DivisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DivisionId {
            get {
                return this.DivisionIdField;
            }
            set {
                if ((this.DivisionIdField.Equals(value) != true)) {
                    this.DivisionIdField = value;
                    this.RaisePropertyChanged("DivisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Settings", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Settings : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WcfServiceAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WcfServiceAddress {
            get {
                return this.WcfServiceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.WcfServiceAddressField, value) != true)) {
                    this.WcfServiceAddressField = value;
                    this.RaisePropertyChanged("WcfServiceAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Division", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Division : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Server.Dal.Sql.DataObjects")]
    [System.SerializableAttribute()]
    public partial class User : Init.DbCore.DbObject, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DivisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DivisionId {
            get {
                return this.DivisionIdField;
            }
            set {
                if ((this.DivisionIdField.Equals(value) != true)) {
                    this.DivisionIdField = value;
                    this.RaisePropertyChanged("DivisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IServiceOperation")]
    public interface IServiceOperation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/TestConnection", ReplyAction="http://tempuri.org/IServiceOperation/TestConnectionResponse")]
        void TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddGroup", ReplyAction="http://tempuri.org/IServiceOperation/AddGroupResponse")]
        void AddGroup(DAL.WCF.ServiceReference.EquipmentGroup item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditGroup", ReplyAction="http://tempuri.org/IServiceOperation/EditGroupResponse")]
        void EditGroup(DAL.WCF.ServiceReference.EquipmentGroup item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteGroup", ReplyAction="http://tempuri.org/IServiceOperation/DeleteGroupResponse")]
        void DeleteGroup(DAL.WCF.ServiceReference.EquipmentGroup item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetGroupList", ReplyAction="http://tempuri.org/IServiceOperation/GetGroupListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.EquipmentGroup> GetGroupList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddKEquipment", ReplyAction="http://tempuri.org/IServiceOperation/AddKEquipmentResponse")]
        void AddKEquipment(DAL.WCF.ServiceReference.KEquipment item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditKEquipment", ReplyAction="http://tempuri.org/IServiceOperation/EditKEquipmentResponse")]
        void EditKEquipment(DAL.WCF.ServiceReference.KEquipment item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteKEquipment", ReplyAction="http://tempuri.org/IServiceOperation/DeleteKEquipmentResponse")]
        void DeleteKEquipment(DAL.WCF.ServiceReference.KEquipment item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetKEquipmentList", ReplyAction="http://tempuri.org/IServiceOperation/GetKEquipmentListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.KEquipment> GetKEquipmentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddEquipment", ReplyAction="http://tempuri.org/IServiceOperation/AddEquipmentResponse")]
        void AddEquipment(DAL.WCF.ServiceReference.Equipment item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditEquipment", ReplyAction="http://tempuri.org/IServiceOperation/EditEquipmentResponse")]
        void EditEquipment(DAL.WCF.ServiceReference.Equipment item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteEquipment", ReplyAction="http://tempuri.org/IServiceOperation/DeleteEquipmentResponse")]
        void DeleteEquipment(DAL.WCF.ServiceReference.Equipment item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetEquipmentList", ReplyAction="http://tempuri.org/IServiceOperation/GetEquipmentListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Equipment> GetEquipmentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetEquipmentListForUnit", ReplyAction="http://tempuri.org/IServiceOperation/GetEquipmentListForUnitResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Equipment> GetEquipmentListForUnit(int unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetCurrentComplectationForUnit", ReplyAction="http://tempuri.org/IServiceOperation/GetCurrentComplectationForUnitResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Equipment> GetCurrentComplectationForUnit(int unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddMovement", ReplyAction="http://tempuri.org/IServiceOperation/AddMovementResponse")]
        void AddMovement(DAL.WCF.ServiceReference.Movement item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditMovement", ReplyAction="http://tempuri.org/IServiceOperation/EditMovementResponse")]
        void EditMovement(DAL.WCF.ServiceReference.Movement item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteMovement", ReplyAction="http://tempuri.org/IServiceOperation/DeleteMovementResponse")]
        void DeleteMovement(DAL.WCF.ServiceReference.Movement item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetMovementList", ReplyAction="http://tempuri.org/IServiceOperation/GetMovementListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Movement> GetMovementList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetMovementListByEquipmentId", ReplyAction="http://tempuri.org/IServiceOperation/GetMovementListByEquipmentIdResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Movement> GetMovementListByEquipmentId(int equipmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetMovementListByTimeAndUnitId", ReplyAction="http://tempuri.org/IServiceOperation/GetMovementListByTimeAndUnitIdResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Movement> GetMovementListByTimeAndUnitId(System.DateTime minTime, System.DateTime maxTime, int unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetMovement", ReplyAction="http://tempuri.org/IServiceOperation/GetMovementResponse")]
        DAL.WCF.ServiceReference.Movement GetMovement(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddUnit", ReplyAction="http://tempuri.org/IServiceOperation/AddUnitResponse")]
        void AddUnit(DAL.WCF.ServiceReference.Unit item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditUnit", ReplyAction="http://tempuri.org/IServiceOperation/EditUnitResponse")]
        void EditUnit(DAL.WCF.ServiceReference.Unit item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteUnit", ReplyAction="http://tempuri.org/IServiceOperation/DeleteUnitResponse")]
        void DeleteUnit(DAL.WCF.ServiceReference.Unit item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetUnitList", ReplyAction="http://tempuri.org/IServiceOperation/GetUnitListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Unit> GetUnitList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetUnitListForUser", ReplyAction="http://tempuri.org/IServiceOperation/GetUnitListForUserResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Unit> GetUnitListForUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddSettings", ReplyAction="http://tempuri.org/IServiceOperation/AddSettingsResponse")]
        void AddSettings(DAL.WCF.ServiceReference.Settings item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditSettings", ReplyAction="http://tempuri.org/IServiceOperation/EditSettingsResponse")]
        void EditSettings(DAL.WCF.ServiceReference.Settings item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteSettings", ReplyAction="http://tempuri.org/IServiceOperation/DeleteSettingsResponse")]
        void DeleteSettings(DAL.WCF.ServiceReference.Settings item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetSettings", ReplyAction="http://tempuri.org/IServiceOperation/GetSettingsResponse")]
        DAL.WCF.ServiceReference.Settings GetSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddDivision", ReplyAction="http://tempuri.org/IServiceOperation/AddDivisionResponse")]
        void AddDivision(DAL.WCF.ServiceReference.Division item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditDivision", ReplyAction="http://tempuri.org/IServiceOperation/EditDivisionResponse")]
        void EditDivision(DAL.WCF.ServiceReference.Division item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteDivision", ReplyAction="http://tempuri.org/IServiceOperation/DeleteDivisionResponse")]
        void DeleteDivision(DAL.WCF.ServiceReference.Division item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetDivisionList", ReplyAction="http://tempuri.org/IServiceOperation/GetDivisionListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Division> GetDivisionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetTreeSortedDivisionList", ReplyAction="http://tempuri.org/IServiceOperation/GetTreeSortedDivisionListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.Division> GetTreeSortedDivisionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/AddUser", ReplyAction="http://tempuri.org/IServiceOperation/AddUserResponse")]
        void AddUser(DAL.WCF.ServiceReference.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/EditUser", ReplyAction="http://tempuri.org/IServiceOperation/EditUserResponse")]
        void EditUser(DAL.WCF.ServiceReference.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/DeleteUser", ReplyAction="http://tempuri.org/IServiceOperation/DeleteUserResponse")]
        void DeleteUser(DAL.WCF.ServiceReference.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOperation/GetUserList", ReplyAction="http://tempuri.org/IServiceOperation/GetUserListResponse")]
        System.Collections.Generic.List<DAL.WCF.ServiceReference.User> GetUserList();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceOperationChannel : DAL.WCF.ServiceReference.IServiceOperation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOperationClient : System.ServiceModel.ClientBase<DAL.WCF.ServiceReference.IServiceOperation>, DAL.WCF.ServiceReference.IServiceOperation {
        
        public ServiceOperationClient() {
        }
        
        public ServiceOperationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceOperationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOperationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOperationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void TestConnection() {
            base.Channel.TestConnection();
        }
        
        public void AddGroup(DAL.WCF.ServiceReference.EquipmentGroup item) {
            base.Channel.AddGroup(item);
        }
        
        public void EditGroup(DAL.WCF.ServiceReference.EquipmentGroup item) {
            base.Channel.EditGroup(item);
        }
        
        public void DeleteGroup(DAL.WCF.ServiceReference.EquipmentGroup item) {
            base.Channel.DeleteGroup(item);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.EquipmentGroup> GetGroupList() {
            return base.Channel.GetGroupList();
        }
        
        public void AddKEquipment(DAL.WCF.ServiceReference.KEquipment item) {
            base.Channel.AddKEquipment(item);
        }
        
        public void EditKEquipment(DAL.WCF.ServiceReference.KEquipment item) {
            base.Channel.EditKEquipment(item);
        }
        
        public void DeleteKEquipment(DAL.WCF.ServiceReference.KEquipment item) {
            base.Channel.DeleteKEquipment(item);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.KEquipment> GetKEquipmentList() {
            return base.Channel.GetKEquipmentList();
        }
        
        public void AddEquipment(DAL.WCF.ServiceReference.Equipment item) {
            base.Channel.AddEquipment(item);
        }
        
        public void EditEquipment(DAL.WCF.ServiceReference.Equipment item) {
            base.Channel.EditEquipment(item);
        }
        
        public void DeleteEquipment(DAL.WCF.ServiceReference.Equipment item) {
            base.Channel.DeleteEquipment(item);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Equipment> GetEquipmentList() {
            return base.Channel.GetEquipmentList();
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Equipment> GetEquipmentListForUnit(int unitId) {
            return base.Channel.GetEquipmentListForUnit(unitId);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Equipment> GetCurrentComplectationForUnit(int unitId) {
            return base.Channel.GetCurrentComplectationForUnit(unitId);
        }
        
        public void AddMovement(DAL.WCF.ServiceReference.Movement item) {
            base.Channel.AddMovement(item);
        }
        
        public void EditMovement(DAL.WCF.ServiceReference.Movement item) {
            base.Channel.EditMovement(item);
        }
        
        public void DeleteMovement(DAL.WCF.ServiceReference.Movement item) {
            base.Channel.DeleteMovement(item);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Movement> GetMovementList() {
            return base.Channel.GetMovementList();
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Movement> GetMovementListByEquipmentId(int equipmentId) {
            return base.Channel.GetMovementListByEquipmentId(equipmentId);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Movement> GetMovementListByTimeAndUnitId(System.DateTime minTime, System.DateTime maxTime, int unitId) {
            return base.Channel.GetMovementListByTimeAndUnitId(minTime, maxTime, unitId);
        }
        
        public DAL.WCF.ServiceReference.Movement GetMovement(int id) {
            return base.Channel.GetMovement(id);
        }
        
        public void AddUnit(DAL.WCF.ServiceReference.Unit item) {
            base.Channel.AddUnit(item);
        }
        
        public void EditUnit(DAL.WCF.ServiceReference.Unit item) {
            base.Channel.EditUnit(item);
        }
        
        public void DeleteUnit(DAL.WCF.ServiceReference.Unit item) {
            base.Channel.DeleteUnit(item);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Unit> GetUnitList() {
            return base.Channel.GetUnitList();
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Unit> GetUnitListForUser(int userId) {
            return base.Channel.GetUnitListForUser(userId);
        }
        
        public void AddSettings(DAL.WCF.ServiceReference.Settings item) {
            base.Channel.AddSettings(item);
        }
        
        public void EditSettings(DAL.WCF.ServiceReference.Settings item) {
            base.Channel.EditSettings(item);
        }
        
        public void DeleteSettings(DAL.WCF.ServiceReference.Settings item) {
            base.Channel.DeleteSettings(item);
        }
        
        public DAL.WCF.ServiceReference.Settings GetSettings() {
            return base.Channel.GetSettings();
        }
        
        public void AddDivision(DAL.WCF.ServiceReference.Division item) {
            base.Channel.AddDivision(item);
        }
        
        public void EditDivision(DAL.WCF.ServiceReference.Division item) {
            base.Channel.EditDivision(item);
        }
        
        public void DeleteDivision(DAL.WCF.ServiceReference.Division item) {
            base.Channel.DeleteDivision(item);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Division> GetDivisionList() {
            return base.Channel.GetDivisionList();
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.Division> GetTreeSortedDivisionList() {
            return base.Channel.GetTreeSortedDivisionList();
        }
        
        public void AddUser(DAL.WCF.ServiceReference.User item) {
            base.Channel.AddUser(item);
        }
        
        public void EditUser(DAL.WCF.ServiceReference.User item) {
            base.Channel.EditUser(item);
        }
        
        public void DeleteUser(DAL.WCF.ServiceReference.User item) {
            base.Channel.DeleteUser(item);
        }
        
        public System.Collections.Generic.List<DAL.WCF.ServiceReference.User> GetUserList() {
            return base.Channel.GetUserList();
        }
    }
}
